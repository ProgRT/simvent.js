sv={},sv.translate=function(t,i,s){try{var e=dict[t][i][s]}catch(h){console.log("Was unable to translate "+t)}finally{return e}},sv.log=function(t,i){return{time:i.time,Flung:t.flow,Palv:t.Palv,Pel:t.Pel,Pmus:t.Pmus,Vabs:t.Vabs,Vti:t.Vti,Vte:t.Vte,Vt:t.Vt,Vtmax:t.Vtmax,PCO2:t.PCO2,SCO2:t.SCO2,VCO2:t.VtCO2,Pao:i.Pao,Fip:i.Fip,Fop:i.Fop,stateP:i.stateP,Pcirc:i.Pcirc,Fmax:i.Fmax,Fstop:i.Fstop}},sv.logPerc=function(t,i){return{time:i.time,Vtip:t.Vtip,Vtep:t.Vtep}},sv.sygY=function(t,i,s,e,h){return i+(s-i)/(1+Math.exp(-(t-e)/h))},sv.sygX=function(t,i,s,e,h){return e-h*Math.log((s-i)/(t-i)-1)},sv.avg=function(t,s,e){for(i=0;i<t.length-(e-1);i++){var h=i,a=t[h][s];for(i2=h+1;i2<h+e;i2++)a+=t[i2][s];t[h][s]=a/e}},sv.defaultsTable=function(t){var i=document.getElementsByTagName("body")[0],s=document.createElement("table");i.appendChild(s);var e=document.createElement("tr"),h=document.createElement("th");h.textContent="Parameter",e.appendChild(h);var a=document.createElement("th");a.textContent="Default",e.appendChild(a);var n=document.createElement("th");n.textContent="Unit",e.appendChild(n),s.appendChild(e);for(id in t){var o=t[id];if(1!=o.calculated){var e=document.createElement("tr"),h=document.createElement("td");h.textContent=id,e.appendChild(h);var a=document.createElement("td");a.textContent=this[id],e.appendChild(a);var n=document.createElement("td");n.textContent=o.unit,e.appendChild(n),s.appendChild(e)}}},sv.Lung=class t{constructor(){this.defaults={Tsampl:.001,Raw:5,Vdaw:.1,PiCO2:0,PACO2:35,Slope2:.003,Slope3:5,Vti:0,Vte:0,Vtmax:0,PCO2:0,Vabs:0};this.parseDefaults()}parseDefaults(){for(var t in this.defaults){this[t]=this.defaults[t]}}get Palv(){return this.Pel-this.Pmus}get Vt(){return this.Vtmax-this.Vte}get SCO2(){return this.PCO2/(760-47)}get VcAlv(){return this.Vtmax-this.Vdaw}get PplCO2(){return this.PACO2-this.Slope3*(this.VcAlv/2)}appliquer_pression(t,i){var s=0;var e=0;while(s<i){var h=t-this.Palv;var a=h/this.Raw;this.appliquer_debit(a,this.Tsampl);s+=this.Tsampl}}appliquer_debit(t,i){if(isNaN(t)){throw"sv.SimpleLung.appliquer_debit: NaN value passed as flow"}this.flow=t;var s=this.flow*i;this.Vabs+=s;if(this.flow>0){this.Vti+=s;this.Vtmax=this.Vti;this.PCO2=0;this.Vte=0;this.VtCO2=0}else{this.Vti=0;this.Vte-=s;this.updateCO2();this.VtCO2+=this.SCO2*-s}this.time+=i}updateCO2(){var t=sv.sygY(this.Vte,this.PiCO2,this.PplCO2,this.Vdaw,this.Slope2);if(this.Vte>this.Vdaw){t+=this.Slope3*(this.Vte-this.Vdaw)}this.PCO2=t}complianceCurve(){var t=new sv.PVCurve;var i=t.ventilate(this).timeData;var s="svg"+document.querySelectorAll("svg").length;document.write("<svg id='"+s+"'></svg>");function e(t){return t.Pel}function h(t){return t.Vabs}var a=new gs.graph("#"+s);a.setscale(i,e,h);a.tracer(i,e,h);a.setidx("Elastic recoil pressure (cmH₂O)");a.setidy("Volume (l)")}defaultsTable(){sv.defaultsTable.call(this,this.mechParams)}},sv.SimpleLung=class t extends sv.Lung{constructor(t){super();this.defaults={Crs:50,Pmus:0,Vfrc:2.5};this.parseDefaults();this.Vabs=this.Vfrc;this.mechParams={Crs:{unit:"ml/cmH₂O"},Raw:{unit:"cmH₂O/l/s"}}}get Pel(){return 1e3*(this.Vabs-this.Vfrc)/this.Crs}},sv.SptLung=class t extends sv.Lung{constructor(){super();this.defaults={Crs:50,Fspt:14,Ti:1,Pmax:6.5,Vabs:0,time:0};this.parseDefaults();this.mechParams={Crs:{unit:"ml/cmH₂O"},Raw:{unit:"cmH₂O/l/s"},Fspt:{unit:"/min."},Ti:{unit:"sec."},Pmax:{unit:"cmH₂O"}}}get Pmus(){var t=this.time%(60/this.Fspt);if(t<this.Ti&&this.Fspt>0){return.5*this.Pmax*(1+Math.sin(2*Math.PI*(t/this.Ti)-Math.PI/2))}else{return 0}}get Pel(){return 1e3*this.Vabs/this.Crs}},sv.SygLung=class t extends sv.Lung{constructor(){super();this.defaults={Vmax:4,Vmin:0,Pid:5,Kid:20,Pmus:0};this.parseDefaults();this.mechParams={Vmax:{unit:"l"},Vmin:{unit:"l"},Pid:{unit:"cmH₂O"},Kid:{unit:"cmH₂O"},Raw:{unit:"cmH₂O/l/s"}};this.flow=0;this.Vabs=this.volume(0)}volume(t){return sv.sygY(t,this.Vmin,this.Vmax,this.Pid,this.Kid)}get Pel(){return sv.sygX(this.Vabs,this.Vmin,this.Vmax,this.Pid,this.Kid)}},sv.RLung=class t extends sv.Lung{constructor(){super();this.defaults={Vmax:4,Vmin:0,Pid:20,Kid:20,Phister:20,flow:0,lastFlow:0,Pmus:0,Vtmax:0,lastPel:0};this.parseDefaults();this.VmaxExp=this.Vmax;this.VminInsp=this.Vmin;this.Vabs=this.volume(0);console.log("Palv = "+this.Palv);console.log("Palv = "+this.Palv);this.fitInsp();this.fitExp();this.appliquer_pression(1,3);this.appliquer_pression(-1,3);this.appliquer_pression(1,3);this.appliquer_pression(-1,3);console.log("Palv = "+this.Palv);console.log("VminInsp = "+this.VminInsp);console.log("VmaxExp = "+this.VmaxExp);this.mechParams={Vmax:{unit:"l"},Vmin:{unit:"l"},PidInsp:{unit:"cmH₂O"},PidExp:{unit:"cmH₂O"},Kid:{unit:"cmH₂O"},Raw:{unit:"cmH₂O/l/s"}}}volume(t){return sv.sygY(t,this.Vmin,this.Vmax,this.Pid,this.Kid)}fitInsp(){console.log("fitInsp");var t=1+Math.pow(Math.E,-((this.lastPel-this.PidInsp)/this.Kid));this.VminInsp=(t*this.Vabs-this.Vmax)/(t-1)}fitExp(){console.log("fitExp");var t=1+Math.pow(Math.E,-((this.lastPel-this.PidExp)/this.Kid));this.VmaxExp=this.Vmin+(this.Vabs-this.Vmin)*t}fit(){if(this.flow>0&&this.lastFlow<0){this.fitInsp()}else if(this.flow<0&&this.lastFlow>0){this.fitExp()}this.lastFlow=this.flow}get Pel(){this.fit();if(this.flow>=0){var t=sv.sygX(this.Vabs,this.VminInsp,this.Vmax,this.PidInsp,this.Kid);this.lastPel=t;return t}else{var t=sv.sygX(this.Vabs,this.Vmin,this.VmaxExp,this.PidExp,this.Kid);this.lastPel=t;return t}}get PidInsp(){return this.Pid+this.Phister/2}get PidExp(){return this.Pid-this.Phister/2}},sv.Ventilator=class t{constructor(){this.time=0;this.Tvent=12;this.Tsampl=.003;this.demoLung=sv.SimpleLung;this.simParams={Tsampl:{unit:"s"},Tvent:{uni:"s"}}}updateCalcParams(){console.log("updateCalcParams is deprecated")}ventilate(t){this.timeData=[];for(this.simulationStop=this.time+this.Tvent;this.time<=this.simulationStop;){this.ventilationCycle(t)}if(this.lowPass>1){for(var i in this.dataToFilter){var s=this.dataToFilter[i];var e=this.timeData[0][s];for(var h=1,a=this.timeData.length;h<a;++h){var n=this.timeData[h][s];e+=(n-e)/this.lowPass;this.timeData[h][s]=e}}}if(this.rAvg>=2){for(i in this.dataToFilter){sv.avg(this.timeData,this.dataToFilter[i],this.rAvg)}}return{timeData:this.timeData}}ventilationCycle(){throw"ventilationCycle() must be implemented i high level ventilator model."}sampleWaveform(){var t=new this.demoLung;var i=this.ventilate(t).timeData;var s=["Pao"];for(var e in s){var h="svg"+document.querySelectorAll("svg").length;document.write("<svg id='"+h+"' class='ventSample'></svg>");function a(t){return t.time}function n(t){return t[s[e]]}var o=new gs.graph("#"+h);o.setscale(i,a,n);o.tracer(i,a,n);o.setidx("Time (s)");o.setidy(s[e])}}defaultsTable(){sv.defaultsTable.call(this,this.ventParams)}},sv.PressureAssistor=class t extends sv.Ventilator{constructor(){super();this.Passist=12;this.PEEP=5;this.Cycling=25;this.Ftrig=.1;this.demoLung=sv.SptLung;this.ventParams={Passist:{unit:"cmH₂O"},PEEP:{unit:"cmH₂O"},Ftrig:{unit:"l/min."},Cycling:{unit:"%"}}}ventilationCycle(t){this.Fmax=0;this.Pao=this.PEEP;while(t.flow<this.Ftrig&&this.time<=this.simulationStop){t.appliquer_pression(this.PEEP,this.Tsampl);this.timeData.push(sv.log(t,this));this.time+=this.Tsampl}this.Pao=this.Passist+this.PEEP;while(t.flow>this.Fstop&&this.time<=this.simulationStop){t.appliquer_pression(this.Passist,this.Tsampl);this.timeData.push(sv.log(t,this));this.time+=this.Tsampl;if(t.flow>this.Fmax){this.Fmax=t.flow}}t.appliquer_pression(this.PEEP,this.Tsampl)}get Fstop(){return this.Fmax*this.Cycling/100}},sv.PressureControler=class t extends sv.Ventilator{constructor(){super();this.Pinspi=10;this.PEEP=5;this.Ti=1;this.Fconv=12;this.ventParams={Pinspi:{unit:"cmH₂O"},PEEP:{unit:"cmH₂O"},Fconv:{unit:"/min."},Ti:{unit:"cmH₂O"},Te:{calculated:true,unit:"sec."},Tcycle:{calculated:true,unit:"sec."}}}get Tcycle(){return 60/this.Fconv}get Te(){return this.Tcycle-this.Ti}ventilationCycle(t){var i=this.time;var s=this.time+this.Ti;this.Pao=this.Pinspi+this.PEEP;while(this.time<s&&this.time<=this.simulationStop){t.appliquer_pression(this.Pao,this.Tsampl);this.timeData.push(sv.log(t,this));this.time+=this.Tsampl}var s=this.time+this.Te;this.Pao=this.PEEP;while(this.time<s&&this.time<=this.simulationStop){t.appliquer_pression(this.Pao,this.Tsampl);this.timeData.push(sv.log(t,this));this.time+=this.Tsampl}}},sv.PVCurve=class t extends sv.Ventilator{constructor(){super();this.Pstart=0;this.Pmax=100;this.Pstop=0;this.Pstep=2;this.Tman=20;this.ventParams={Pstart:{unit:"cmH₂O"},Pmax:{unit:"cmH₂O"},Pstop:{unit:"cmH₂O"},Pstep:{unit:"cmH₂O"},Tman:{unit:"s"}}}ventilate(t){var i=[];var s=[];this.time=0;this.nbStep=(this.Pmax-this.Pstart+(this.Pmax-this.Pstop))/this.Pstep;this.Ti=this.Tman/this.nbStep;this.Pao=this.Pstart;while(this.Pao<this.Pmax){var e=this.time;while(this.time<e+this.Ti){t.appliquer_pression(this.Pao,this.Tsampl);i.push(sv.log(t,this));this.time+=this.Tsampl}this.Pao+=this.Pstep}while(this.Pao>=this.Pstop){var e=this.time;while(this.time<e+this.Ti){t.appliquer_pression(this.Pao,this.Tsampl);i.push(sv.log(t,this));this.time+=this.Tsampl}this.Pao-=this.Pstep}return{timeData:i,respd:s}}},sv.Phasitron={},sv.Phasitron.Fop=function(t,i){return i>=0&&40>=i?t+t*(5-i/8):i>40?t:0>i?6*t:void 0},sv.VDR=class t extends sv.Ventilator{constructor(){super();this.Tramp=.005;this.Rexp=1;this.rAvg=2;this.lowPass=3;this.simParams={Tvent:{unit:"s"},Tsampl:{unit:"s"},Tramp:{unit:"s"},Rexp:{unit:"cmH₂O/l/s"},rAvg:{},lowPass:{}};this.Tic=2;this.Tec=2;this.Fperc=500;this.Rit=.5;this.Fipl=.18;this.Fiph=1.8;this.CPR=0;this.Fop=0;this.Fip=0;this.Pao=0;this.CycleC=0;this.ventParams={Tic:{unit:"s"},Tec:{unit:"s"},Fconv:{unit:"s",calculated:true},Fperc:{unit:"/min"},Fhz:{unit:"hz",calculated:true},Rit:{},Fiph:{unit:"l/s"},Fipl:{unit:"l/s"},CPR:{}};this.dataToFilter=["Pao","Flung"]}get Fhz(){return this.Fperc/60}get Fconv(){return 60/(this.Tic+this.Tec)}get Tcc(){return this.Tic+this.Tec}percussiveExpiration(t,i){t.flow=0;this.Fip=0;this.Fop=0;this.stateP=0;t.Vtep=0;var s=this.time+this.Tep;while(this.time<s){this.Pao=-t.flow*i;var e=(this.Pao-t.Palv)/t.Raw;t.appliquer_debit(e,this.Tsampl);this.timeData.push(sv.log(t,this));this.time+=this.Tsampl}}percussiveInspiration(t,i){this.stateP=1;t.Vtip=0;this.Fip=i;var s=this.time;var e=this.time+this.Tip;while(this.time<e){this.Fip=i;this.Pao=this.Fop*t.Raw+t.Palv;this.Fop=sv.Phasitron.Fop(this.Fip,this.Pao);t.appliquer_debit(this.Fop,this.Tsampl);this.timeData.push(sv.log(t,this));this.time+=this.Tsampl}}convectiveInspiration(t){var i=this.Tcc*Math.ceil(this.time/this.Tcc);var s=this.time+.8;this.CycleC=1;while(this.time<i&&this.time<this.simulationStop){if(this.time<s){var e=this.Fiph}else{var e=this.Fiph*(1+this.CPR)}this.percussiveInspiration(t,e);if(this.time<s){this.percussiveExpiration(t,this.Rexp)}else{this.percussiveExpiration(t,this.Rexp*(1+this.CPR))}}}convectiveExpiration(t){var i=this.Tcc*Math.floor(this.time/this.Tcc)+this.Tec;this.CycleC=0;while(this.time<i&&this.time<this.simulationStop){this.percussiveInspiration(t,this.Fipl);this.percussiveExpiration(t,this.Rexp)}}get Tip(){return 60/this.Fperc*this.Rit}get Tep(){return 60/this.Fperc-this.Tip}ventilationCycle(t){this.convectiveExpiration(t);this.convectiveInspiration(t)}},sv.FlowControler=class t extends sv.Ventilator{constructor(){super();this.Vt=.5;this.PEEP=5;this.Ti=1;this.Fconv=12;this.ventParams={Vt:{unit:"l"},PEEP:{unit:"cmH₂O"},Fconv:{unit:"/min."},Ti:{unit:"cmH₂O"},Te:{calculated:true,unit:"sec."},Tcycle:{calculated:true,unit:"sec."}}}get Tcycle(){return 60/this.Fconv}get Te(){return 60/this.Fconv-this.Ti}get Flow(){return this.Vt/this.Ti}Aventilate(t){var i=[];var s=[];for(this.time=0;this.time<this.Tvent;){var e=this.time;while(this.time<e+this.Ti){t.appliquer_debit(this.Flow,this.Tsampl);this.Pao=t.Palv+this.Flow*t.Raw;i.push(sv.log(t,this));this.time+=this.Tsampl}this.Pao=this.PEEP;while(this.time<e+60/this.Fconv){t.appliquer_pression(this.Pao,this.Tsampl);i.push(sv.log(t,this));this.time+=this.Tsampl}var h=(760-47)*t.veco2/t.vce;s.push({pmeco2:h,petco2:t.pco2,pAco2:t.PACO2,fowler:t.Vem/t.vce,bohr:(t.PACO2-h)/t.PACO2})}return{timeData:i,convData:s}}ventilationCycle(t){for(var i=this.time+this.Ti;this.time<i&&this.time<=this.simulationStop;this.time+=this.Tsampl){t.appliquer_debit(this.Flow,this.Tsampl);this.Pao=t.Palv+this.Flow*t.Raw;this.timeData.push(sv.log(t,this))}this.Pao=this.PEEP;for(var i=this.time+this.Te;this.time<i&&this.time<=this.simulationStop;this.time+=this.Tsampl){t.appliquer_pression(this.Pao,this.Tsampl);this.timeData.push(sv.log(t,this))}}},sv.Protocol=class t{constructor(){}ventilate(t){}},sv.ventilators=[sv.PressureControler,sv.FlowControler,sv.PressureAssistor,sv.VDR,sv.PVCurve],sv.lungs=[sv.SimpleLung,sv.SptLung,sv.SygLung,sv.RLung];